/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface.Brokers;

import business.Company.Company;
import business.Investor.Investor;
import business.Investor.InvestorProfile;
import business.Investor.StockHoldings;
import business.Stocks.Stock;
import business.Stocks.StockBroker;
import business.Stocks.StockPurchaseRequest;
import business.Stocks.StockSellRequest;
import business.TheBusiness.Business;
import business.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kusumanth
 */
public class StockBrokerJPanel extends javax.swing.JPanel {

    Business business;
    UserAccount account;
    StockBroker stockBroker;
    StockSellRequest stockSellRequest;
    StockPurchaseRequest stockPurchaseRequest;

    public StockBrokerJPanel(JPanel userProcessContainer, UserAccount account, Business business) {
        this.business = business;
        this.account = account;
        this.stockBroker = (StockBroker) account.getUser();
        initComponents();
        if (this.stockBroker.getAssignedMarket() == null) {
            changeScreen(marketNotAssigned);
            jLabel11.setText(this.stockBroker.getName());
        } else {
            changeScreen(homepage);
            jLabel1.setText(this.stockBroker.getName());
            jLabel5.setText(this.stockBroker.getAssignedMarket());
            jLabel9.setText(this.stockBroker.getName());
            jLabel10.setText(this.stockBroker.getName());
            populateBuyRequestTable();
            populateSellRequestTable();
            populateSharesTable();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buyRequests = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBuyReq = new javax.swing.JTable();
        btnBuy = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel13 = new javax.swing.JLabel();
        sellRequest = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSellRequests = new javax.swing.JTable();
        btnSell = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        marketNotAssigned = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        homepage = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableShares = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 0, 255));
        setLayout(new java.awt.CardLayout());

        buyRequests.setBackground(new java.awt.Color(255, 255, 255));
        buyRequests.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblBuyReq.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblBuyReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Username", "Company Name", "Quotated Buy Price", "Qty Request", "Approval Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBuyReq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBuyReqMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBuyReq);

        buyRequests.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 223, 800, 192));

        btnBuy.setBackground(new java.awt.Color(85, 65, 118));
        btnBuy.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBuy.setForeground(new java.awt.Color(255, 255, 255));
        btnBuy.setText("Process Buy Request");
        btnBuy.setBorder(null);
        btnBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyActionPerformed(evt);
            }
        });
        buyRequests.add(btnBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 178, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Buy Requests:");
        buyRequests.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 195, -1, -1));

        jButton4.setBackground(new java.awt.Color(85, 65, 118));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Reject Buy Request");
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        buyRequests.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 430, 178, 40));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(420, 80));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(85, 65, 119));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Title");

        jToggleButton1.setBackground(new java.awt.Color(85, 65, 119));
        jToggleButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jToggleButton1.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton1.setText("<< Back");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jToggleButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(184, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        buyRequests.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 947, -1));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assests/Mail sent-rafiki.png"))); // NOI18N
        buyRequests.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, 450, 410));

        add(buyRequests, "card3");

        sellRequest.setBackground(new java.awt.Color(255, 255, 255));
        sellRequest.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Sell Requests:");
        sellRequest.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 176, -1, -1));

        tblSellRequests.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblSellRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Username", "Company Name", "Quotated Sell Price", "Qty Request", "Approval Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSellRequests.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSellRequestsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSellRequests);

        sellRequest.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 204, 759, 192));

        btnSell.setBackground(new java.awt.Color(85, 65, 118));
        btnSell.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSell.setForeground(new java.awt.Color(255, 255, 255));
        btnSell.setText("Process Sell Request");
        btnSell.setBorder(null);
        btnSell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSellActionPerformed(evt);
            }
        });
        sellRequest.add(btnSell, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 414, 173, 40));

        jButton5.setBackground(new java.awt.Color(85, 65, 118));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Reject Sell Request");
        jButton5.setBorder(null);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        sellRequest.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 414, 173, 40));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(420, 80));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(85, 65, 119));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Title");

        jButton1.setBackground(new java.awt.Color(85, 65, 119));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jButton1)
                .addGap(104, 104, 104)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        sellRequest.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1264, -1));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assests/Mail sent-pana.png"))); // NOI18N
        sellRequest.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 30, 450, 410));

        add(sellRequest, "card4");

        marketNotAssigned.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("You have not been assigned a market yet!");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Please wait for confirmation from the brokerage commission");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(420, 80));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(85, 65, 119));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Title");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel11)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assests/Fingerprint-bro.png"))); // NOI18N

        javax.swing.GroupLayout marketNotAssignedLayout = new javax.swing.GroupLayout(marketNotAssigned);
        marketNotAssigned.setLayout(marketNotAssignedLayout);
        marketNotAssignedLayout.setHorizontalGroup(
            marketNotAssignedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 947, Short.MAX_VALUE)
            .addGroup(marketNotAssignedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(marketNotAssignedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(marketNotAssignedLayout.createSequentialGroup()
                .addGap(247, 247, 247)
                .addComponent(jLabel15)
                .addContainerGap(250, Short.MAX_VALUE))
        );
        marketNotAssignedLayout.setVerticalGroup(
            marketNotAssignedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(marketNotAssignedLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addContainerGap())
        );

        add(marketNotAssigned, "card5");

        homepage.setBackground(new java.awt.Color(255, 255, 255));

        tableShares.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tableShares.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Company Name", "Price Per Share", "Stock Qty", "Available Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableShares);
        if (tableShares.getColumnModel().getColumnCount() > 0) {
            tableShares.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Top Shares:");

        jButton2.setBackground(new java.awt.Color(85, 65, 118));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Buy Requests");
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(85, 65, 118));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Sell Requests");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Market");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(420, 80));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(85, 65, 119));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Title");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assests/Auction-amico.png"))); // NOI18N

        javax.swing.GroupLayout homepageLayout = new javax.swing.GroupLayout(homepage);
        homepage.setLayout(homepageLayout);
        homepageLayout.setHorizontalGroup(
            homepageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 947, Short.MAX_VALUE)
            .addGroup(homepageLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(homepageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 842, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(homepageLayout.createSequentialGroup()
                        .addGroup(homepageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(111, 111, 111)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        homepageLayout.setVerticalGroup(
            homepageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homepageLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(homepageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(homepageLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(33, 33, 33)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)
                        .addComponent(jLabel4))
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
        );

        add(homepage, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyActionPerformed

        if (tblBuyReq.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to process");
            return;

        }
        StockPurchaseRequest purchaseRequest = this.stockBroker.getPurchaseRequestByID(Integer.parseInt(String.valueOf(tblBuyReq.getValueAt(tblBuyReq.getSelectedRow(), 0))));
        StockHoldings holdingToAdd = new StockHoldings();
        Boolean addNewFlag = true;
        InvestorProfile buyer = new InvestorProfile();
        if (purchaseRequest.getStock().getAvailableQuantity() >= purchaseRequest.getQuantity()) {

            if (purchaseRequest.getBuyer() instanceof Investor) {
                buyer = (Investor) purchaseRequest.getBuyer();
            } else if (purchaseRequest.getBuyer() instanceof Company) {
                buyer = (Company) purchaseRequest.getBuyer();
            }
            for (StockHoldings equityHoldings : buyer.getStockHoldings()) {
                if (equityHoldings.getStock() == purchaseRequest.getStock()) {
                    holdingToAdd = equityHoldings;
                    addNewFlag = false;
                }
            }
            double price = ((holdingToAdd.getActualPrice()* holdingToAdd.getQuantity()) + (purchaseRequest.getQuantity() * purchaseRequest.getStock().getPrice())) / (holdingToAdd.getQuantity() + purchaseRequest.getQuantity());
            holdingToAdd.setQuantity(holdingToAdd.getQuantity() + purchaseRequest.getQuantity());
            holdingToAdd.setActualPrice(price);
            purchaseRequest.getStock().setAvailableQuantity(purchaseRequest.getStock().getAvailableQuantity() - purchaseRequest.getQuantity());
            if (addNewFlag) {
                holdingToAdd.setStock(purchaseRequest.getStock());
                buyer.getStockHoldings().add(holdingToAdd);
            }
            purchaseRequest.getBuyer().getStockBuyRequests().remove(purchaseRequest);
            this.stockBroker.getPurchaseRequests().remove(purchaseRequest);
            populateSharesTable();
            populateBuyRequestTable();
            populateSellRequestTable();
            JOptionPane.showMessageDialog(this, "Request Processed!");

        } else {
            JOptionPane.showMessageDialog(this, "Allotment quantity requested too high");
        }
    }//GEN-LAST:event_btnBuyActionPerformed

    private void tblSellRequestsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSellRequestsMouseClicked
        Stock stockToSell = this.business.getMarket().getStockMarket().getStockByName(String.valueOf(tblSellRequests.getValueAt(tblSellRequests.getSelectedRow(), 2)));
//        txtSellingShare.setText(stockToSell.getCompany().getName());
        int sellRequestId = Integer.parseInt(String.valueOf(tblSellRequests.getValueAt(tblSellRequests.getSelectedRow(), 0)));
        this.stockSellRequest = this.stockBroker.getStockSellRequestByID(sellRequestId);
    }//GEN-LAST:event_tblSellRequestsMouseClicked

    private void tblBuyReqMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBuyReqMouseClicked
        Stock stockToBuy = this.business.getMarket().getStockMarket().getStockByName(String.valueOf(tblBuyReq.getValueAt(tblBuyReq.getSelectedRow(), 2)));
        int buyRequestId = Integer.parseInt(String.valueOf(tblBuyReq.getValueAt(tblBuyReq.getSelectedRow(), 0)));
        this.stockPurchaseRequest = this.stockBroker.getPurchaseRequestByID(buyRequestId);
    }//GEN-LAST:event_tblBuyReqMouseClicked

    private void btnSellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSellActionPerformed

        if (tblSellRequests.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to process");
            return;

        }
        StockSellRequest sellRequest = this.stockBroker.getStockSellRequestByID(Integer.parseInt(String.valueOf(tblSellRequests.getValueAt(tblSellRequests.getSelectedRow(), 0))));
        StockHoldings holdingToSell = new StockHoldings();
        if (sellRequest.getSeller() instanceof Investor) {
            for (StockHoldings stockHoldings : ((Investor) sellRequest.getSeller()).getStockHoldings()) {
                if (stockHoldings.getStock() == sellRequest.getStock()) {
                    holdingToSell = stockHoldings;
                }
            }
            holdingToSell.setQuantity(holdingToSell.getQuantity() - sellRequest.getQuantity());
            sellRequest.getSeller().setBalance(sellRequest.getSeller().getBalance() + sellRequest.getStock().getPrice());
            if (holdingToSell.getQuantity() == 0) {
                ((Investor) sellRequest.getSeller()).getStockHoldings().remove(holdingToSell);
            }
        } else {
            for (StockHoldings equityHoldings : ((Company) sellRequest.getSeller()).getStockHoldings()) {
                if (equityHoldings.getStock() == sellRequest.getStock()) {
                    holdingToSell = equityHoldings;
                }
            }
            holdingToSell.setQuantity(holdingToSell.getQuantity() - sellRequest.getQuantity());
            if (holdingToSell.getQuantity() == 0) {
                ((Company) sellRequest.getSeller()).getStockHoldings().remove(holdingToSell);
            }
        }
        sellRequest.getStock().setAvailableQuantity(sellRequest.getStock().getAvailableQuantity() + sellRequest.getQuantity());
        sellRequest.getSeller().getStockSellRequests().remove(sellRequest);
        this.stockBroker.getSellRequests().remove(sellRequest);
        populateSharesTable();
        populateBuyRequestTable();
        populateSellRequestTable();
        JOptionPane.showMessageDialog(this, "Request Processed!");


    }//GEN-LAST:event_btnSellActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        changeScreen(homepage);
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        changeScreen(homepage);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        changeScreen(buyRequests);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        changeScreen(sellRequest);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        if (tblBuyReq.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to process");
            return;

        }
        StockPurchaseRequest buyRequest = this.stockBroker.getPurchaseRequestByID(Integer.parseInt(String.valueOf(tblBuyReq.getValueAt(tblBuyReq.getSelectedRow(), 0))));
        InvestorProfile buyer = buyRequest.getBuyer();
        buyer.setBalance(buyer.getBalance() + (buyRequest.getQuantity() * buyRequest.getStock().getPrice()));
        buyRequest.getBuyer().getStockBuyRequests().remove(buyRequest);
        this.stockBroker.getPurchaseRequests().remove(buyRequest);
        JOptionPane.showMessageDialog(this, "Request Rejected and Deleted!");
        populateBuyRequestTable();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        if (tblSellRequests.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to process");
            return;

        }
        StockSellRequest sellRequest = this.stockBroker.getStockSellRequestByID(Integer.parseInt(String.valueOf(tblSellRequests.getValueAt(tblSellRequests.getSelectedRow(), 0))));
        InvestorProfile seller = sellRequest.getSeller();
        seller.setBalance(seller.getBalance() + (sellRequest.getQuantity() * sellRequest.getStock().getPrice()));
        sellRequest.getSeller().getStockSellRequests().remove(sellRequest);
        this.stockBroker.getSellRequests().remove(sellRequest);
        JOptionPane.showMessageDialog(this, "Request Rejected and Deleted!");
        populateSellRequestTable();
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuy;
    private javax.swing.JButton btnSell;
    private javax.swing.JPanel buyRequests;
    private javax.swing.JPanel homepage;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JPanel marketNotAssigned;
    private javax.swing.JPanel sellRequest;
    private javax.swing.JTable tableShares;
    private javax.swing.JTable tblBuyReq;
    private javax.swing.JTable tblSellRequests;
    // End of variables declaration//GEN-END:variables

    private void populateBuyRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblBuyReq.getModel();
        model.setRowCount(0);
        for (StockPurchaseRequest stockBuyRequest : this.stockBroker.getPurchaseRequests()) {
            Object[] row = new Object[6];
            row[0] = stockBuyRequest.getPurchaseID();
            row[1] = stockBuyRequest.getBuyer().getName();
            row[2] = stockBuyRequest.getStock().getCompany().getName();
            row[3] = stockBuyRequest.getStock().getPrice();
            row[4] = stockBuyRequest.getQuantity();
            row[5] = "pending";
            model.addRow(row);
        }
    }

    private void populateSellRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblSellRequests.getModel();
        model.setRowCount(0);
        for (StockSellRequest stockSellRequest : this.stockBroker.getSellRequests()) {
            Object[] row = new Object[6];
            row[0] = stockSellRequest.getSaleID();
            row[1] = stockSellRequest.getSeller().getName();
            row[2] = stockSellRequest.getStock().getCompany().getName();
            row[3] = stockSellRequest.getStock().getPrice();
            row[4] = stockSellRequest.getQuantity();
            row[5] = "pending";
            model.addRow(row);
        }
    }

    private void populateSharesTable() {
        DefaultTableModel model = (DefaultTableModel) tableShares.getModel();
        model.setRowCount(0);
        for (Stock stock : this.business.getMarket().getStockMarket().getStockList()) {
            Object[] row = new Object[4];
            row[0] = stock.getCompany().getName();
            row[1] = stock.getPrice();
            row[2] = stock.getStockQuantity();
            row[3] = stock.getAvailableQuantity();
            model.addRow(row);
        }
    }

    private void changeScreen(JPanel newJPanel) {
        this.removeAll();
        this.add(newJPanel);
        this.revalidate();
        this.repaint();
    }
}
